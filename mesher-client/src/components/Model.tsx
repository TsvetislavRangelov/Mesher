/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei'
import { Mesh } from 'three'

export function Model(props: any) {
  const { nodes, materials } = useGLTF('/compressed.glb')
  return (
    <group {...props} dispose={null}  position={[0, -2, 0]} scale={[0.1, 0.1, 0.1]}>
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.Headphones_low as Mesh).geometry}
        material={materials.GlassPlasticMat}
        rotation={[-Math.PI, 0, -Math.PI]}
        scale={580}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.Lenses_low as Mesh).geometry}
        material={materials.LensesMat}
        rotation={[-Math.PI, 0, -Math.PI]}
        scale={580}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.Leather1_low as Mesh).geometry}
        material={materials.LeatherPartsMat}
        rotation={[-Math.PI, 0, -Math.PI]}
        scale={580}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.Metal1_low as Mesh).geometry}
        material={materials.MetalPartsMat}
        rotation={[-Math.PI, 0, -Math.PI]}
        scale={580}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={(nodes.Plastic1_low as Mesh).geometry}
        material={materials.RubberWoodMat}
        rotation={[-Math.PI, 0, -Math.PI]}
        scale={580}
      />
    </group>
  )
}

useGLTF.preload('/compressed.glb')